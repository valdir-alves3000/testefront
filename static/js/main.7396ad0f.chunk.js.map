{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","ufs","setUfs","cities","setCities","history","useHistory","initialPosition","setInitialPosition","name","email","whatsapp","formData","setformData","selectedItems","setSelectedItems","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","handleInputChange","event","target","value","a","preventDefault","uf","city","latitude","longitude","data","post","alert","push","useEffect","navigator","geolocation","getCurrentPosition","position","coords","get","then","response","ufInitials","map","sigla","cityNames","nome","onSubmit","htmlFor","type","onChange","Map","center","zoom","onclick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","onClick","findIndex","filteredItems","filter","handleSelectItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,kC,uOCiC5BC,EAzBF,WACX,OACE,yBAAKC,GAAG,aACN,yBAAKC,UAAU,WACb,gCACA,yBAAKC,IAAKC,IAAMC,IAAI,aAGpB,8BACE,yEACA,kGAEA,kBAAC,IAAD,CAAMC,GAAG,iBACT,8BACI,kBAAC,IAAD,OAEF,oE,kGClBGC,EAJHC,IAAMC,OAAO,CACvBC,QAAS,0BCyRIC,G,MAjQK,WAAO,IAAD,EACEC,mBAAiB,IADnB,mBACjBC,EADiB,KACVC,EADU,OAEFF,mBAAmB,IAFjB,mBAEjBG,EAFiB,KAEZC,EAFY,OAGIJ,mBAAmB,IAHvB,mBAGjBK,EAHiB,KAGTC,EAHS,KAKlBC,EAAUC,cALQ,EAOsBR,mBAA2B,CAAC,EAAG,IAPrD,mBAOjBS,EAPiB,KAOAC,EAPA,OASQV,mBAAS,CACvCW,KAAM,GACNC,MAAO,GACPC,SAAU,KAZY,mBASjBC,EATiB,KASPC,EATO,OAekBf,mBAAmB,IAfrC,mBAejBgB,EAfiB,KAeFC,EAfE,OAgBYjB,mBAAS,KAhBrB,mBAgBjBkB,EAhBiB,KAgBLC,EAhBK,OAiBgBnB,mBAAS,KAjBzB,mBAiBjBoB,EAjBiB,KAiBHC,EAjBG,OAkBwBrB,mBAA2B,CAAC,EAAG,IAlBvD,mBAkBjBsB,EAlBiB,KAkBCC,EAlBD,KAiFxB,SAASC,GAAkBC,GAAuC,IAAD,EACvCA,EAAMC,OAAtBf,EADuD,EACvDA,KAAMgB,EADiD,EACjDA,MAEdZ,EAAY,2BAAKD,GAAN,kBAAiBH,EAAOgB,KApFb,8CAmGxB,WAA4BF,GAA5B,+BAAAG,EAAA,6DACEH,EAAMI,iBAEElB,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACfiB,EAAKZ,EACLa,EAAOX,EALf,cAMgCE,EANhC,GAMSU,EANT,KAMmBC,EANnB,KASQC,EAAO,CACXvB,OACAC,QACAC,WACAiB,KACAC,OACAC,WACAC,YACAhC,MAVYe,GAPhB,SAoBQrB,EAAIwC,KAAK,SAAUD,GApB3B,OAsBEE,MAAM,0BAEN7B,EAAQ8B,KAAK,KAxBf,6CAnGwB,sBA8HxB,OA1GAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAAAC,GAAa,IAAD,EACnBA,EAASC,OAAjCX,EAD2C,EAC3CA,SAAUC,EADiC,EACjCA,UAElBvB,EAAmB,CAACsB,EAAUC,IAC9BV,EAAoB,CAACS,EAAUC,SAGhC,IAEHK,qBAAU,WACR3C,EAAIiD,IAAI,SAASC,MAAK,SAAAC,GACpB5C,EAAS4C,EAASZ,WAEnB,IAEHI,qBAAU,WAER1C,IAAMgD,IAAsB,+DAA+DC,MAAK,SAAAC,GAC9F,IAAMC,EAAaD,EAASZ,KAAKc,KAAI,SAAAlB,GAAE,OAAIA,EAAGmB,SAE9C7C,EAAO2C,QAER,IAEHT,qBAAU,WAEU,MAAfpB,GAIHtB,IACGgD,IADH,sEAC0F1B,EAD1F,gBAEG2B,MAAK,SAAAC,GAEJ,IAAMI,EAAYJ,EAASZ,KAAKc,KAAI,SAAAjB,GAAI,OAAIA,EAAKoB,QAEnD7C,EAAU4C,QAGX,CAAChC,IAmEF,yBAAK7B,GAAG,qBACN,gCACE,yBAAKE,IAAKC,IAAMC,IAAI,YAEpB,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,MADF,qBAMF,0BAAM0D,SAzIc,8CA0IlB,2CAAgB,6BAAhB,oBAEA,kCACE,gCACE,sCAGF,yBAAK9D,UAAU,SACb,2BAAO+D,QAAQ,QAAf,oBACA,2BACEC,KAAK,OACL3C,KAAK,OACLtB,GAAG,OACHkE,SAAU/B,MAId,yBAAKlC,UAAU,eACb,yBAAKA,UAAU,SACb,2BAAO+D,QAAQ,SAAf,UACA,2BACEC,KAAK,QACL3C,KAAK,QACLtB,GAAG,QACHkE,SAAU/B,MAGd,yBAAKlC,UAAU,SACb,2BAAO+D,QAAQ,YAAf,YACA,2BACEC,KAAK,OACL3C,KAAK,WACLtB,GAAG,WACHkE,SAAU/B,QAMlB,kCACE,gCACE,2CACA,kEAGF,kBAACgC,EAAA,EAAD,CACEC,OAAQhD,EACRiD,KAAM,GACNC,QAhHV,SAAyBlC,GACvBF,EAAoB,CAClBE,EAAMmC,OAAOC,IACbpC,EAAMmC,OAAOE,QAgHP,kBAACC,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAGN,kBAACC,EAAA,EAAD,CAAQxB,SAAUpB,KAGpB,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,SACb,2BAAO+D,QAAQ,MAAf,eACA,4BACAE,SA3IZ,SAAyB9B,GACvB,IAAMK,EAAKL,EAAMC,OAAOC,MAExBR,EAAcW,IAyIJH,MAAOT,EACPP,KAAK,KACLtB,GAAG,MAED,4BAAQsC,MAAM,KAAd,oBACCxB,EAAI6C,KAAI,SAAAlB,GAAE,OACT,4BAAQqC,IAAKrC,EAAIH,MAAOG,GAAKA,QAInC,yBAAKxC,UAAU,SACb,2BAAO+D,QAAQ,QAAf,UAEA,4BACE1C,KAAK,OACLtB,GAAG,OACHsC,MAAOP,EACPmC,SAvJd,SAA2B9B,GACzB,IAAMM,EAAON,EAAMC,OAAOC,MAE1BN,EAAgBU,KAsJJ,4BAAQJ,MAAM,KAAd,yBACCtB,EAAO2C,KAAI,SAAAjB,GAAI,OACd,4BAAQoC,IAAKpC,EAAMJ,MAAOI,GAAOA,UAO3C,kCACE,gCACE,kDACA,uEAGF,wBAAIzC,UAAU,cACXW,EAAM+C,KAAI,SAAAoB,GAAI,OACb,wBACED,IAAKC,EAAK/E,GACVgF,QAAS,kBAzJvB,SAA2BhF,GAGzB,GAFwB2B,EAAcsD,WAAU,SAAAF,GAAI,OAAIA,IAAS/E,MAE3C,EAAI,CACxB,IAAMkF,EAAgBvD,EAAcwD,QAAO,SAAAJ,GAAI,OAAIA,IAAS/E,KAE5D4B,EAAiBsD,QAEjBtD,EAAiB,GAAD,mBAAMD,GAAN,CAAqB3B,KAiJZoF,CAAiBL,EAAK/E,KACrCC,UAAW0B,EAAc0D,SAASN,EAAK/E,IAAM,WAAa,IAE1D,yBAAKE,IAAK6E,EAAKO,UAAWlF,IAAK2E,EAAKQ,QACpC,8BAAOR,EAAKQ,aAKpB,4BAAQtB,KAAK,UAAb,iCCrQOuB,EATA,WACb,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,UAAW1F,EAAM2F,KAAK,IAAIC,OAAK,IACtC,kBAAC,IAAD,CAAOF,UAAW/E,EAAagF,KAAK,oBCCzBE,MANf,WACE,OACK,kBAAC,EAAD,OCHPC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7396ad0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div id=\"page-home\">\r\n      <div className=\"content\">\r\n        <header>\r\n        <img src={logo} alt=\"Ecoleta\"/>\r\n        </header>\r\n\r\n        <main>\r\n          <h1>Seu marketplace de coleta de res√≠duos.</h1>\r\n          <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.</p>\r\n\r\n          <Link to=\"/create-point\">\r\n          <span>\r\n              <FiLogIn />\r\n            </span>\r\n            <strong>Cadastre um ponto de coleta</strong>\r\n          </Link>\r\n           \r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3333'\r\n});\r\n\r\nexport default api;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\n\r\nimport api from '../../services/api';\r\nimport axios from 'axios';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n  sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n  nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [cities, setCities] = useState<string[]>([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n\r\n  const [formData, setformData] = useState({\r\n    name: '',\r\n    email: '',\r\n    whatsapp: '',\r\n  });\r\n\r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n  const [selectedUf, setSelectedUf] = useState('0');\r\n  const [selectedCity, setSelectedCity] = useState('0');\r\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n  \r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      setInitialPosition([latitude, longitude]);\r\n      setSelectedPosition([latitude, longitude]);\r\n                  \r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('items').then(response => {\r\n      setItems(response.data);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // carregar os estados\r\n    axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n      const ufInitials = response.data.map(uf => uf.sigla);  \r\n    \r\n      setUfs(ufInitials);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // carregar as cidades\r\n    if(selectedUf === '0') {\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n      .then(response => {\r\n\r\n        const cityNames = response.data.map(city => city.nome);  \r\n    \r\n      setCities(cityNames);\r\n    });\r\n    \r\n  }, [selectedUf]);\r\n\r\n  function handleSelectUf (event: ChangeEvent<HTMLSelectElement>) {\r\n    const uf = event.target.value;\r\n\r\n    setSelectedUf(uf);\r\n  }\r\n\r\n  function handleSelectCity (event: ChangeEvent<HTMLSelectElement>) {\r\n    const city = event.target.value;\r\n\r\n    setSelectedCity(city);\r\n  }\r\n\r\n  function handleMapClick (event: LeafletMouseEvent) {\r\n    setSelectedPosition([\r\n      event.latlng.lat,\r\n      event.latlng.lng,\r\n    ])\r\n  }\r\n\r\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { name, value } = event.target;\r\n   \r\n    setformData({ ...formData, [name]: value });    \r\n  }\r\n\r\n  function handleSelectItem (id: number) {\r\n    const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n    if(alreadySelected >= 0 ) {\r\n      const filteredItems = selectedItems.filter(item => item !== id);\r\n\r\n      setSelectedItems(filteredItems);\r\n    } else {\r\n      setSelectedItems([ ...selectedItems, id]);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n    \r\n    const { name, email, whatsapp } = formData;\r\n    const uf = selectedUf;\r\n    const city = selectedCity;\r\n    const [latitude, longitude] = selectedPosition;\r\n    const items = selectedItems;\r\n\r\n    const data = {\r\n      name,\r\n      email,\r\n      whatsapp,\r\n      uf,\r\n      city,\r\n      latitude,\r\n      longitude,\r\n      items\r\n    };\r\n\r\n    await api.post('points', data);\r\n\r\n    alert('Ponto de coleta criado');\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\" />\r\n\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n          Voltar para Home\r\n        </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Cadastro do <br /> ponto de coleta</h1>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\">Nome da entidade</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"whatsapp\"\r\n                id=\"whatsapp\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endere√ßo</h2>\r\n            <span>Selecione o endere√ßo no mapa</span>\r\n          </legend>\r\n\r\n          <Map\r\n            center={initialPosition} \r\n            zoom={15}\r\n            onclick={handleMapClick}\r\n            >\r\n\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker position={selectedPosition} />\r\n          </Map>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (UF)</label>\r\n              <select \r\n              onChange={handleSelectUf}\r\n              value={selectedUf}\r\n              name=\"uf\" \r\n              id=\"uf\"\r\n              >\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map(uf => (\r\n                  <option key={uf} value={uf}>{uf}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"city\">Cidade</label>\r\n\r\n              <select \r\n                name=\"city\" \r\n                id=\"city\"\r\n                value={selectedCity}\r\n                onChange={handleSelectCity}\r\n                >\r\n                <option value=\"0\">Selecione uma cidade </option>\r\n                {cities.map(city => (\r\n                  <option key={city} value={city}>{city}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>√çtens de coleta</h2>\r\n            <span>Selecione um ou mais √≠tens abaixo</span>\r\n          </legend>\r\n\r\n          <ul className=\"items-grid\">\r\n            {items.map(item => (\r\n              <li \r\n                key={item.id} \r\n                onClick={() => handleSelectItem(item.id)} \r\n                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n                >\r\n                <img src={item.image_url} alt={item.title} />\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n        <button type=\"submit\" >\r\n          Cadastrar ponto de coleta\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePoint;","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport CreatePoint from './pages/CreatePoint';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n    <Route component={Home} path=\"/\" exact />\r\n    <Route component={CreatePoint} path=\"/create-point\" />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n       <Routes />  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}